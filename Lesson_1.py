'''
1. Поработайте с переменными, создайте несколько, выведите на экран. Запросите у пользователя некоторые числа и строки и
      сохраните в переменные, затем выведите на экран.
'''

var_1 = input('Введите число - ')
var_2 = input('Введите строку - ')

print('В качестве числа вы ввели', var_1)
print('В качестве строки вы ввели', var_2)

'''
2. Пользователь вводит время в секундах. Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс.
Используйте форматирование строк.
'''

seconds = int(input('Введите время в секундах - '))

hours = seconds // 3600
minutes = (seconds - hours * 3600) // 60
seconds = seconds - hours * 3600 - minutes * 60

print(f'{hours:02}:{minutes:02}:{seconds:02}')

'''
3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
'''

input_number = input('Введите число n для третьего задания - ')

print('сумма n + nn + nnn составит (где отсуствие знака это не умножение):',
      float(input_number) + float(input_number * 2) + float(input_number * 3))

'''
4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. Для решения используйте цикл
 while и арифметические операции.
 '''

input_four = int(input('Введите целое положительное число - '))

biggest_num = int(str(input_four)[0])  # на случай если пользователь все равно введет от 0 до 9.
while input_four > 10:
    last_symbol = input_four % 10  # for по заданию использовать видимо нельзя, так что будет счетчик по разрядам
    input_four //= 10  # убираем посчитаный разряд
    if last_symbol > biggest_num:
        biggest_num = last_symbol
print(f'самая большая цифра в числе это {biggest_num}')

'''
5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает
фирма. Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки. Выведите соответствующее 
сообщение.
'''

revenue = float(input('Введите значение выручки, руб. '))
outgoings = float(input('Введите значение издержек, руб. '))

income = revenue - outgoings

if income > 0:
    print('Ваша прибыль составила:', income, 'руб.')
elif income < 0:
    print('Ваш убыток составил:', income, 'руб.')
else:
    print('Вы сработали в ноль')

'''
6. Если фирма отработала с прибылью, вычислите рентабельность выручки. Это отношение прибыли к выручке. Далее запросите 
численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.
'''

if income > 0:
    print('Рентабельность выручки составила:', income / revenue)
    staff_num = int(input('Введите колличество сотрудников - '))
    print('Прибыль фирмы в расчёте на одного сотрудника:', income / staff_num, 'руб.')

'''
7. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. Каждый день спортсмен
увеличивал результат на 10% относительно предыдущего. Требуется определить номер дня, на который результат спортсмена 
составит не менее b километров. Программа должна принимать значения параметров a и b и выводить одно натуральное число 
— номер дня.
Например: a = 2, b = 3.
Результат:
1-й день: 2
2-й день: 2,2
3-й день: 2,42
4-й день: 2,66
5-й день: 2,93
6-й день: 3,22
Ответ: на шестой день спортсмен достиг результата — не менее 3 км.
'''

initial_indicators = float(input("Введите результат спортсмена в первый день"))
desired_indicators = float(input("Введите результат к которому он стремится"))
day = 1
if initial_indicators >= desired_indicators:
    print('Ну в этом случае надо лежать на диване, а не бегать')
else:
    print(f'{day}-й день: {initial_indicators}')
    while initial_indicators < desired_indicators:
        initial_indicators *= 1.1
        day += 1
        print(f'{day}-й день: {initial_indicators}')

print(f'Ответ: на {day}-й день спортсмен достиг результата — не менее {desired_indicators} км')